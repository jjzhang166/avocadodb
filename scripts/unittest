#!/bin/bash
export PID=$$
export GLIBCXX_FORCE_NEW=1

SED=sed
isMac=0
if test "$(uname)" == "Darwin"; then
    isMac=1
    SED=gsed
fi

if test -n "$ORIGINAL_PATH"; then
    # running in cygwin...
    PS='\'
    export EXT=".exe"
else
    export EXT=""
    PS='/'
fi;

export PORT=`expr 1024 + $RANDOM`

NUMA=""

if $(which numactl > /dev/null 2>&1); then
    NUMA="numactl --interleave=all"
fi

if [ -z "${AVOCADOSH}" ];  then
    if [ -x build/bin/avocadosh ];  then
        AVOCADOSH="build/bin/avocadosh${EXT}"
    elif [ -x bin/avocadosh ];  then
        AVOCADOSH="bin/avocadosh${EXT}"
    elif [ -x usr/bin/avocadosh ];  then
        AVOCADOSH="usr/bin/avocadosh${EXT}"
    else
        AVOCADOSH="$(find . -name "avocadosh${EXT}" -executable -type f | head -n 1)"
        [ -x "${AVOCADOSH}" ] || {
          echo "$0: cannot locate avocadosh"
          exit 1
        }
    fi
fi

declare -a EXTRA_ARGS

if [ `uname -s` == "Darwin" ]; then
  EXEC_PATH="$(dirname "$(dirname "$0")")"
else
  EXEC_PATH="$(dirname "$(dirname "$(readlink -m "$0")")")"
  [ -x "${AVOCADOSH}" ] && AVOCADOSH="$(readlink -m "${AVOCADOSH}")"
fi

[[ " $@ " =~ "--build" ]] || {
  BUILD_PATH="$(dirname "$(dirname "${AVOCADOSH}")")"
  BUILD_PATH="${BUILD_PATH#${EXEC_PATH}/}"

  if test -n "$ORIGINAL_PATH"; then
    # running in cygwin...
      BUILD_PATH=$(cygpath --windows "$BUILD_PATH")
  fi
  EXTRA_ARGS=("--build" "${BUILD_PATH}")
}

(
  cd "${EXEC_PATH}"
  exec $NUMA $AVOCADOSH \
       -c etc${PS}relative${PS}avocadosh.conf \
       --log.level warning \
       --server.endpoint tcp://127.0.0.1:${PORT} \
       --javascript.execute UnitTests${PS}unittest.js \
       -- \
       "$@" "${EXTRA_ARGS[@]}"
)
